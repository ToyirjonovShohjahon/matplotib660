# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AnTT9Ph4lAfK-rBajn17xB_2mqEmyapt
"""

import matplotlib.pyplot as plt
import numpy as np

x= np.array([0,6])
y= np.array([0,250])

plt.plot(x,y)
plt.show()

import matplotlib.pyplot as plt
import numpy as np

# Create data for the heartbeat
x = np.linspace(0, 10, 1000)  # More data points for smoother curve
y = np.sin(x) * np.exp(-x/3)  # Simulate heartbeat with sine wave and exponential decay

# Create the plot
plt.plot(x, y)
plt.title("Heartbeat Plot")
plt.xlabel("Time")
plt.ylabel("Amplitude")
plt.show()

import matplotlib.pyplot as plt
import numpy as np

# Define the function to create the heart shape
def heartbeat(t):
    x = 16 * np.sin(t)**3
    y = 13 * np.cos(t) - 5 * np.cos(2*t) - 2 * np.cos(3*t) - np.cos(4*t)
    return x, y

# Create data points
t = np.linspace(0, 2*np.pi, 1000)
x, y = heartbeat(t)

# Plot the heart shape
plt.plot(x, y, color='red')
plt.title("Heartbeat Shape")
plt.axis('off')  # Remove axes for cleaner look
plt.show()

import matplotlib.pyplot as plt
import numpy as np

# Generate sample EKG data (same as before)
fs = 1000
t = np.arange(0, 1, 1/fs)
f = 2
signal = np.sin(2 * np.pi * f * t)

# Create the plot
fig, ax = plt.subplots()  # Create figure and axes objects
ax.plot(t, signal)

# Add edges to the plot
ax.spines['top'].set_linewidth(2)    # Set top edge thickness
ax.spines['bottom'].set_linewidth(2) # Set bottom edge thickness
ax.spines['left'].set_linewidth(2)   # Set left edge thickness
ax.spines['right'].set_linewidth(2)  # Set right edge thickness

# Alternatively, you can set all edges at once:
# for spine in ['top', 'bottom', 'left', 'right']:
#     ax.spines[spine].set_linewidth(2)

# Customize edge color (optional)
ax.spines['top'].set_color('red')

# Add title and labels (same as before)
plt.title("Tachycardia EKG Layout with Edges")
plt.xlabel("Time (s)")
plt.ylabel("Amplitude")
plt.show()

import matplotlib.pyplot as plt
import numpy as np

# Parametrlar
n_points = 5  # Yulduzning uchlari soni
radius_outer = 1  # Tashqi radius
radius_inner = 0.5  # Ichki radius

# Burchaklarni aniqlash
angles = np.linspace(0, 2 * np.pi, 2 * n_points + 1)

# Yulduzning tashqi va ichki nuqtalarini aniqlash
radii = np.array([radius_outer if i % 2 == 0 else radius_inner for i in range(len(angles))])

# Polar koordinatalardan x va y hisoblash
x = radii * np.cos(angles)
y = radii * np.sin(angles)

# Grafikni chizish
plt.figure(figsize=(6, 6))
plt.plot(x, y, color="blue", linewidth=2, label="Yulduz")
plt.fill(x, y, color="lightblue", alpha=0.5)
plt.title("Yulduz shakli")
plt.xlabel("X koordinatasi")
plt.ylabel("Y koordinatasi")
plt.axhline(0, color='black', linewidth=0.5, linestyle="--")
plt.axvline(0, color='black', linewidth=0.5, linestyle="--")
plt.grid()
plt.legend()
plt.axis("equal")
plt.show()

import matplotlib.pyplot as plt
import numpy as np

t = np.linspace(0, 2, 1000)  # 2 soniyali interval, yuqori aniqlik

pulse = np.sin(2 * np.pi * 1.5 * t) * np.exp(-0.8 * t)  # Asosiy sinus to'lqin va amplituda pasayishi
pulse += 0.5 * np.sin(2 * np.pi * 8 * t) * np.exp(-1.5 * t)  # Detallar uchun kichik sinus to'lqin


pulse = np.abs(pulse) * np.sin(4 * np.pi * t)

plt.figure(figsize=(10, 4))
plt.plot(t, pulse, color="red", label="Yurak pulsining modeli")
plt.title("Yurak Pulsining Simulyatsiyasi")
plt.xlabel("Vaqt (soniya)")
plt.ylabel("Amplitude")
plt.grid()
plt.legend()
plt.show()

import matplotlib.pyplot as plt
import numpy as np

y= np.array([3,8,1,10])

plt.plot(y, marker='o', ms=20,mec='r')
plt.show()

import matplotlib.pyplot as plt
import numpy as np

x1=np.array([0,1,2,3])
y1=np.array([3,8,1,10])
x2=np.array([0,1,2,3])
y2=np.array([6,2,7,11])

plt.plot(x1,y1,x2,y2)
plt.show()

import matplotlib.pyplot as plt
import numpy as np

x=np.array([0,1,2,3,4,5])
y=np.array([0,8,12,20,26,38])
plt.scatter (x,y)
plt.show()

import matplotlib.pyplot as plt
import numpy as np

x=np.array([0,1,2,3,4,5])
y=np.array([0,2,8,1,14,7])
plt.scatter(x,y,color='blue')

x= np.array([12,6,8,11,8,3])
y= np.array([5,6,7,3,7,17,19])
plt.scatter(x,y,color='red')
plt.show()

import matplotlib.pyplot as plt
import numpy as np

x=np.array([0,1,2,3,4,5])
y=np.array([0,2,8,1,14,7])
mycolor=['red','green', 'purple','lime','aqua','yellow']

plt.scatter(x,y,color= mycolor)

plt.show()

import matplotlib.pyplot as plt
import numpy as np

x=np.array([0,1,2,3,4,5])
y=np.array([0,2,8,1,14,7])
mycolor=['red','green', 'purple','lime','aqua','yellow']
size=[10,60,120,80,20,190]
plt.scatter(x,y,color= mycolor, s=size)

plt.show()

import matplotlib.pyplot as plt
import numpy as np

x=np.array(['A','B','C','D'])
y=np.array([3,8,1,10])
plt.bar(x,y)
plt.show()

import matplotlib.pyplot as plt
import numpy as np

x=np.array(['A','B','C','D'])
y=np.array([3,8,1,10])
plt.barh(x,y)
plt.show()

import matplotlib.pyplot as plt
import numpy as np

x=np.array([35,25,25,15])

plt.pie(y)

plt.show()

import matplotlib.pyplot as plt
import numpy as np

x=np.array([35,25,25,15])
mylabels = ['Apples','Bananas','Cherries','Dates']

plt.pie(y, labels=mylabels)

plt.show()

import matplotlib.pyplot as plt
import numpy as np

x=np.array([35,25,25,15])
mylabels = ['Apples','Bananas','Cherries','Dates']

plt.pie(y, labels=mylabels,startangle=90)

plt.show()

import matplotlib.pyplot as plt
import numpy as np

x=np.array([35,25,25,15])
mylabels = ['Apples','Bananas','Cherries','Dates']
myexplode = [0.2,0,0,0]
plt.pie(y, labels=mylabels,startangle=90, explode=myexplode)

plt.show()

import matplotlib.pyplot as plt
import numpy as np

x=np.array([35,25,25,15])
mylabels = ['Apples','Bananas','Cherries','Dates']
myexplode = [0.2,0,0,0]
plt.pie(y, labels=mylabels,startangle=90, explode=myexplode, shadow=True)

plt.show()

import matplotlib.pyplot as plt
import numpy as np

x=np.array([35,25,25,15])
mylabels = ['Apples','Bananas','Cherries','Dates']
mycolors = ["black","hotpink","b","yellowgreen"]
myexplode = [0.2,0,0,0]
plt.pie(y, labels=mylabels,startangle=90, explode=myexplode, colors=mycolor)

plt.show()

import matplotlib.pyplot as plt
import numpy as np

x=np.array([35,25,25,15])
mylabels = ['Apples','Bananas','Cherries','Dates']
plt.pie(y, labels=mylabels)
plt.legend()

plt.show()

import matplotlib.pyplot as plt
import numpy as np

x=np.array([35,25,25,15])
mylabels = ['Apples','Bananas','Cherries','Dates']
plt.pie(y, labels=mylabels)
plt.legend(title='Four Fruits:')

plt.show()